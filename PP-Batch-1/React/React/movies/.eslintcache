[{"C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\index.js":"1","C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\App.js":"2","C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\reportWebVitals.js":"3","C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Components\\Movies.js":"4","C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Components\\getMovies.js":"5","C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Nav.js":"6","C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Components\\Home.js":"7","C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Components\\About.js":"8"},{"size":459,"mtime":1624634071000,"results":"9","hashOfConfig":"10"},{"size":583,"mtime":1624694788095,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1624634071000,"results":"12","hashOfConfig":"10"},{"size":8839,"mtime":1624692636535,"results":"13","hashOfConfig":"10"},{"size":1859,"mtime":1624634071000,"results":"14","hashOfConfig":"10"},{"size":506,"mtime":1624694710764,"results":"15","hashOfConfig":"10"},{"size":174,"mtime":1624693988099,"results":"16","hashOfConfig":"10"},{"size":207,"mtime":1624694840745,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"e5odw0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\index.js",[],["36","37"],"C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\App.js",[],"C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\reportWebVitals.js",[],"C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Components\\Movies.js",["38","39","40","41","42","43","44"],"import React, { Component } from 'react'\nimport { getMovies } from './getMovies';\nimport axios from 'axios';\nexport default class Movies extends Component {\n    constructor() {\n        super();\n        this.state = {\n            movies: [],\n            currSearchText: '',\n            currPage: 1,\n            genres: [{ _id: 'abcd', name: 'All Genres' }],\n            cGenre: 'All Genres'\n\n        }\n    }\n    async componentDidMount() {\n        console.log('Component DID Mount');\n        let res = await axios.get('https://backend-react-movie.herokuapp.com/movies');\n        let genreRes = await axios.get('https://backend-react-movie.herokuapp.com/genres');\n        // console.log(res.data.movies);\n        console.log(genreRes.data.genres);\n        this.setState({\n            movies: res.data.movies,\n            genres: [...this.state.genres, ...genreRes.data.genres]\n        })\n    }\n    handleChange = (e) => {\n        let val = e.target.value;\n        console.log(val);\n        this.setState({\n            currSearchText: val,\n\n        })\n    }\n    onDelete = (id) => {\n        let arr = this.state.movies.filter(function (movieObj) {\n            return movieObj._id !== id;\n        })\n        // console.log(arr);\n        this.setState({\n            movies: arr\n        });\n    }\n    sortByRatings = (e) => {\n        let className = e.target.className;\n        console.log(className);\n        let sortedMovies = [];\n        if (className == 'fa fa-sort-asc') {\n            //ascending order\n            sortedMovies = this.state.movies.sort(function (movieObjA, movieObjB) {\n                return movieObjA.dailyRentalRate - movieObjB.dailyRentalRate\n            })\n        }\n        else {\n            //descending order\n            sortedMovies = this.state.movies.sort(function (movieObjA, movieObjB) {\n                return movieObjB.dailyRentalRate - movieObjA.dailyRentalRate\n            })\n        }\n        this.setState({\n            movies: sortedMovies\n        })\n    }\n    sortByStock = (e) => {\n        let className = e.target.className;\n        console.log(className);\n        let sortedMovies = [];\n        if (className == 'fa fa-sort-asc') {\n            //ascending order\n            sortedMovies = this.state.movies.sort(function (movieObjA, movieObjB) {\n                return movieObjA.numberInStock - movieObjB.numberInStock\n            })\n        }\n        else {\n            //descending order\n            sortedMovies = this.state.movies.sort(function (movieObjA, movieObjB) {\n                return movieObjB.numberInStock - movieObjA.numberInStock\n            })\n        }\n        this.setState({\n            movies: sortedMovies\n        })\n    }\n    handlePageChange = (pageNumber) => {\n        this.setState({ currPage: pageNumber });\n    }\n    handleGenreChange = (genre) => {\n        this.setState({\n            cGenre: genre\n        })\n    }\n    render() {\n        console.log('render');\n        let { movies, currSearchText, currPage, genres, cGenre } = this.state; //ES6 destructuring\n        let limit = 4;\n        let filteredArr = [];\n        if (currSearchText === '') {\n            filteredArr = movies;\n        }\n        else {\n            filteredArr = movies.filter(function (movieObj) {\n                let title = movieObj.title.toLowerCase();\n                console.log(title);\n                return title.includes(currSearchText.toLowerCase());\n            })\n        }\n        if (cGenre != 'All Genres') {\n            filteredArr = filteredArr.filter(function (movieObj) {\n                return movieObj.genre.name == cGenre\n            })\n        }\n        let numberofPage = Math.ceil(filteredArr.length / limit);\n        let pageNumberArr = [];\n        for (let i = 0; i < numberofPage; i++) {\n            pageNumberArr.push(i + 1);\n        }\n        let si = (currPage - 1) * limit;\n        let ei = si + limit;\n        filteredArr = filteredArr.slice(si, ei);\n        return (\n\n            //JSX\n            <>\n                {this.state.movies.length == 0 ? <div className=\"spinner-border text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div> :\n                    <div className='container'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <ul className=\"list-group\">\n                                    {\n                                        genres.map((genreObj) => (\n                                            <li onClick={() => this.handleGenreChange(genreObj.name)} key={genreObj._id} className='list-group-item'>\n                                                {genreObj.name}\n                                            </li>\n                                        ))\n                                    }\n                                </ul>\n                                <h5>Current Genre : {cGenre}</h5>\n                            </div>\n                            <div className='col-9'>\n                                <input type='search' value={this.state.currSearchText} onChange={this.handleChange} ></input>\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">Title</th>\n                                            <th scope=\"col\">Genre</th>\n                                            <th scope=\"col\">\n                                                <i onClick={this.sortByStock} className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\n                                                Stock\n                                                <i onClick={this.sortByStock} className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\n                                            </th>\n                                            <th scope=\"col\">\n                                                <i onClick={this.sortByRatings} className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\n                                                Rate\n                                                <i onClick={this.sortByRatings} className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\n                                            </th>\n                                            <th></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            filteredArr.map((movieObj) => {\n                                                return (\n                                                    <tr key={movieObj._id} >\n                                                        <td></td>\n                                                        <td>{movieObj.title}</td>\n                                                        <td>{movieObj.genre.name}</td>\n                                                        <td>{movieObj.numberInStock}</td>\n                                                        <td>{movieObj.dailyRentalRate}</td>\n                                                        <td><button onClick={() => {\n                                                            this.onDelete(movieObj._id)\n                                                        }} type=\"button\" className=\"btn btn-danger\">Delete</button></td>\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                                <nav aria-label=\"...\">\n                                    <ul className=\"pagination\">\n                                        {\n                                            pageNumberArr.map((pageNumber) => {\n                                                let classStyle = pageNumber == currPage ? 'page-item active' : 'page-item';\n                                                return (\n                                                    <li key={pageNumber} onClick={() => this.handlePageChange(pageNumber)}\n                                                        className={classStyle}><span className=\"page-link\">{pageNumber}</span></li>\n                                                )\n                                            })\n                                        }\n                                    </ul>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </>\n        )\n    }\n}\n","C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Components\\getMovies.js",[],"C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Nav.js",[],"C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Components\\Home.js",[],"C:\\Users\\VIVEK\\Desktop\\New folder\\PP-Batch-1\\React\\React\\movies\\src\\Components\\About.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":48,"column":23,"nodeType":"55","messageId":"56","endLine":48,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":68,"column":23,"nodeType":"55","messageId":"56","endLine":68,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":107,"column":20,"nodeType":"55","messageId":"56","endLine":107,"endColumn":22},{"ruleId":"53","severity":1,"message":"54","line":109,"column":44,"nodeType":"55","messageId":"56","endLine":109,"endColumn":46},{"ruleId":"53","severity":1,"message":"54","line":124,"column":43,"nodeType":"55","messageId":"56","endLine":124,"endColumn":45},{"ruleId":"53","severity":1,"message":"54","line":185,"column":77,"nodeType":"55","messageId":"56","endLine":185,"endColumn":79},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'getMovies' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]